<UserControl x:Class="Lanpuda.Lims.UI.BasicInformations.Products.Lookups.ProductMultipleLookupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lanpuda.Lims.UI.BasicInformations.Products.Lookups"
             mc:Ignorable="d" 
             xmlns:langs ="clr-namespace:Lanpuda.Lims.UI.Assets.Langs"
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             xmlns:widget="clr-namespace:Lanpuda.Client.Widget;assembly=Lanpuda.Client.Widget" 
             xmlns:converters="clr-namespace:Lanpuda.Client.Theme.Converters;assembly=Lanpuda.Client.Theme"
             d:DesignHeight="800" d:DesignWidth="1400">
    <UserControl.Resources>
        <converters:DisplayAttributeToStringConverter x:Key="DisplayAttributeToStringConverter"></converters:DisplayAttributeToStringConverter>
        <converters:BoolToStringConverter x:Key="BoolToStringConverter"></converters:BoolToStringConverter>
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding InitializeAsyncCommand}"/>
        <dxmvvm:KeyToCommand KeyGesture="Enter" Command="{Binding QueryAsyncCommand}"/>
        <dxmvvm:CurrentWindowService />
    </dxmvvm:Interaction.Behaviors>
    <Grid Background="{StaticResource AntDesign.PrimaryBackgroundColorBrush}">
        <DockPanel Background="Transparent" IsEnabled="{Binding IsLoading, Converter={StaticResource Boolean2BooleanReConverter}}">
            <!--搜索-->
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="5" Background="White">
                <hc:Row Margin="5" Gutter="20">
                    <hc:Col Span="4">
                        <hc:TextBox Text="{Binding Number,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                    hc:TitleElement.Title="产品编码" hc:TitleElement.TitlePlacement="Left"></hc:TextBox>
                    </hc:Col>
                    <hc:Col Span="4">
                        <hc:ComboBox ItemsSource="{Binding ProductTypeSource,UpdateSourceTrigger=PropertyChanged}" ShowClearButton="True"
                                         DisplayMemberPath="DisplayValue" SelectedValuePath="Id" SelectedValue="{Binding DicProductTypeId,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                         hc:TitleElement.Title="产品分类" hc:TitleElement.TitlePlacement="Left"></hc:ComboBox>
                    </hc:Col>
                    <hc:Col Span="4">
                        <hc:TextBox Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                    hc:TitleElement.Title="产品名称" hc:TitleElement.TitlePlacement="Left"></hc:TextBox>
                    </hc:Col>
                    <hc:Col Span="4">
                        <hc:TextBox Text="{Binding Spec,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                    hc:TitleElement.Title="产品规格" hc:TitleElement.TitlePlacement="Left"></hc:TextBox>
                    </hc:Col>

                    <hc:Col Span="4">
                        <StackPanel Orientation="Horizontal">
                            <Button Content="查询" Command="{Binding QueryAsyncCommand}" Style="{DynamicResource ButtonPrimary}" Margin="0,0,0,0"   Cursor="Hand"></Button>
                            <Button Content="重置" Command="{Binding ResetAsyncCommand}" Style="{DynamicResource ButtonDefault}" Margin="20,0,0,0"  Cursor="Hand"></Button>
                        </StackPanel>
                    </hc:Col>
                </hc:Row>
            </StackPanel>
            <Border DockPanel.Dock="Bottom" Style="{ StaticResource BorderRegion}" Margin="0,10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding CloseCommand}" Content="关闭" Style="{StaticResource ButtonDefault}" Margin="10,0"></Button>
                    <Button Command="{Binding SaveCommand}" Content="保存" Style="{StaticResource ButtonPrimary}"></Button>
                </StackPanel>
            </Border>
            <!--分页-->
            <StackPanel DockPanel.Dock="Bottom"  Orientation="Horizontal" HorizontalAlignment="Right">
                <ComboBox  hc:DropDownElement.ConsistentWidth="False" ItemsSource="{Binding PageSizeList}" 
                           DisplayMemberPath="Key" SelectedValuePath="Value" 
                           SelectedValue="{Binding DataCountPerPage}" Margin="10,0" >
                </ComboBox>
                <hc:Pagination MaxPageCount="{Binding MaxPageCount ,UpdateSourceTrigger=PropertyChanged}"   
                                   DataCountPerPage="{Binding DataCountPerPage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                   PageIndex="{Binding PageIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                                   IsJumpEnabled="True" HorizontalAlignment="Right" Margin="0,0,10,0">
                    <hc:Interaction.Triggers>
                        <hc:EventTrigger EventName="PageUpdated">
                            <hc:EventToCommand Command="{Binding PageUpdatedAsyncCommand}" PassEventArgsToCommand="True" />
                        </hc:EventTrigger>
                    </hc:Interaction.Triggers>
                </hc:Pagination>
            </StackPanel>
            <Grid Margin="0,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>
                <DataGrid Style="{StaticResource AntDesign.DataGridCommon.Paged}">
                    <DataGrid.Columns >
                        <DataGridTextColumn Binding="{Binding Name}" Header="{x:Static langs:Lang.Name}"  MinWidth="100"/>
                        <DataGridTextColumn Binding="{Binding Unit}" Header="{x:Static langs:Lang.Unit}"  MinWidth="100"/>
                        <DataGridTextColumn Binding="{Binding Number}" Header="{x:Static langs:Lang.Number}" MinWidth="100"/>
                        <DataGridTextColumn Binding="{Binding DicProductTypeDisplayValue}" Header="{x:Static langs:Lang.ProductType}"  MinWidth="100"/>
                        <DataGridTextColumn Binding="{Binding Spec}" Header="{x:Static langs:Lang.Spec}"  MinWidth="100"/>
                        <DataGridTextColumn Binding="{Binding Remark}" Header="{x:Static langs:Lang.Remark}"  MinWidth="100"/>
                        <DataGridTemplateColumn Header="操作"  MinWidth="100" Width="1*" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" >
                                        <Button Command="{Binding DataContext.SelectCommand,RelativeSource= {RelativeSource AncestorType=UserControl}}" 
                                                Content="选择" Margin="5" Style="{DynamicResource AntDesign.LinkButtonStyle}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding SelectCommand}"/>
                    </dxmvvm:Interaction.Behaviors>
                </DataGrid>
                <GridSplitter Grid.Row="0" Grid.Column="1" Width="3" Margin="2,0,2,0" 
                              Background="{StaticResource AntDesign.BorderColorBaseBrush}"
                              VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
                <DockPanel Grid.Column="2" Background="White">
                    <hc:Divider Content="已选择产品"  Margin="0,10" DockPanel.Dock="Top"/>
                    <DataGrid ItemsSource="{Binding SelectedProductList}" hc:DataGridAttach.ShowRowNumber="True" 
                              HeadersVisibility="All" RowHeaderWidth="30"
                              SelectedItem="{Binding SelectedProduct,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource AntDesign.DataGridCommon}" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="产品名称" Width="1*" />
                            <DataGridTextColumn Binding="{Binding Spec}" Header="产品规格" Width="1*" />
                            <DataGridTextColumn Binding="{Binding Unit}" Header="产品单位" Width="1*"/>
                            <DataGridTemplateColumn Header="操作"  Width="1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" >
                                            <Button Command="{Binding DataContext.DeleteCommand,RelativeSource= {RelativeSource AncestorType=UserControl}}" 
                                                Content="删除" Margin="5" Style="{DynamicResource AntDesign.LinkButtonStyle}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding DeleteCommand}"/>
                        </dxmvvm:Interaction.Behaviors>
                    </DataGrid>
                </DockPanel>
            </Grid>
        </DockPanel>
        <hc:LoadingCircle Visibility="{Binding IsLoading, UpdateSourceTrigger=PropertyChanged,Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
