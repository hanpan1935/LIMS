<UserControl x:Class="Lanpuda.Lims.UI.InspectionTasks.Create.InspectionTaskCreateView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lanpuda.Lims.UI.InspectionTasks.Create"
             mc:Ignorable="d" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             d:DesignHeight="900" d:DesignWidth="1600">
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding InitializeAsyncCommand}"/>
        <dxmvvm:WindowService AllowSetWindowOwner="True" WindowStartupLocation="CenterOwner" WindowShowMode="Dialog">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="Window">
                    <Setter Property="WindowStyle" Value="SingleBorderWindow" />
                    <Setter Property="ShowInTaskbar" Value="False"></Setter>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:CurrentWindowService />
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <DockPanel Background="{StaticResource AntDesign.PrimaryBackgroundColorBrush}" 
                   IsEnabled="{Binding IsLoading,Converter={StaticResource Boolean2BooleanReConverter}}">
            <Border DockPanel.Dock="Top" Style="{StaticResource BorderRegion}" Margin="5">
                <StackPanel>
                    <hc:Row Margin="0,0,0,0" Gutter="20"  VerticalAlignment="Top">
                        <hc:Col Span="6">
                            <hc:ElementGroup Orientation="Horizontal" Layout="Stack">
                                <hc:ElementGroup.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                        </Grid>
                                    </ItemsPanelTemplate>
                                </hc:ElementGroup.ItemsPanel>
                                <TextBlock Text="检验记录" VerticalAlignment="Center" Margin="0,0,0,0" Grid.Column="0" Width="60"></TextBlock>
                                <TextBox Text="{Binding Model.RecordNumber,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Grid.Column="1" IsReadOnly="True"/>
                                <Button Grid.Column="2" Style="{StaticResource ButtonPrimary}"
                                        Command="{Binding ShowSelectRecordViewCommand}"
                                        hc:IconElement.Geometry="{StaticResource SearchGeometry}"/>
                            </hc:ElementGroup>
                        </hc:Col>
                    </hc:Row>
                </StackPanel>
            </Border>
            <Border DockPanel.Dock="Bottom" Style="{StaticResource BorderRegion}" Margin="0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding CloseCommand}" Content="关闭" 
                            Style="{StaticResource ButtonDefault}" Margin="10,0"></Button>
                    <Button Command="{Binding SaveAsyncCommand}" Content="保存" CommandParameter="true" Style="{StaticResource ButtonPrimary}" Margin="10,0"></Button>
                </StackPanel>
            </Border>

            <Border Style="{StaticResource BorderRegion}" Margin="5">
                <DataGrid Style="{StaticResource AntDesign.DataGrid.Editable}" Margin="0" SelectionMode="Single" RowHeight="70"
                          SelectedItem="{Binding Model.SelectedRow,Mode=TwoWay}" VerticalScrollBarVisibility="Auto" 
                          hc:DataGridAttach.ShowRowNumber="True"  HeadersVisibility="All" 
                          ItemsSource="{Binding Model.Details,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding InspectionItemShortName}" MinWidth="200" Header="检验项目" Width="1*"/>
                        <DataGridTemplateColumn CanUserSort="False" MinWidth="200" Header="检验日期" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <hc:DatePicker  SelectedDate="{Binding InspectionDate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}">
                                    </hc:DatePicker>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserSort="False" MinWidth="200" Header="检测设备" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <hc:ElementGroup Orientation="Horizontal" Layout="Stack">
                                        <hc:ElementGroup.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                </Grid>
                                            </ItemsPanelTemplate>
                                        </hc:ElementGroup.ItemsPanel>
                                        <TextBox IsReadOnly="True" Text="{Binding EquipmentName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Grid.Column="1"/>
                                        <Button Grid.Column="2" Style="{StaticResource ButtonPrimary}"
                                        Command="{Binding DataContext.ShowSelectEquipmentViewCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}"
                                        hc:IconElement.Geometry="{StaticResource SearchGeometry}"/>
                                    </hc:ElementGroup>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserSort="False" MinWidth="200" Header="检测人" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <hc:TextBox Text="{Binding Inspector,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}">
                                    </hc:TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserSort="False" MinWidth="200" Header="优先级" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <hc:NumericUpDown Value="{Binding Priority}" Style="{StaticResource NumericUpDownExtend}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserSort="False" MinWidth="200" Header="备注" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <hc:TextBox Text="{Binding Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}">
                                    </hc:TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>
        </DockPanel>
        <hc:LoadingCircle Visibility="{Binding IsLoading, UpdateSourceTrigger=PropertyChanged,Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
